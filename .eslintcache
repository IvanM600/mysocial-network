[{"/Users/ivan/Desktop/React tutorial/my-app/src/index.js":"1","/Users/ivan/Desktop/React tutorial/my-app/src/reportWebVitals.js":"2","/Users/ivan/Desktop/React tutorial/my-app/src/Menu.js":"3","/Users/ivan/Desktop/React tutorial/my-app/src/components/Header/Header.jsx":"4","/Users/ivan/Desktop/React tutorial/my-app/src/components/Navbar/Navbar.jsx":"5","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/MyPosts/MyPosts.jsx":"6","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/MyPosts/Post/Post.jsx":"7","/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/Message/Message.jsx":"8","/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/Dialogitem/Dialogitem.jsx":"9","/Users/ivan/Desktop/React tutorial/my-app/src/components/common/Preloader/Preloader.js":"10","/Users/ivan/Desktop/React tutorial/my-app/src/components/common/FormsControls/FormsControls.js":"11","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profileinfo/ProfileStatusWithHooks.jsx":"12","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/app-reducer.ts":"13","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/auth-reducer.ts":"14","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/dialog-reducer.ts":"15","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/profile-reducer.ts":"16","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/users-reducer.ts":"17","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/redux-store.ts":"18","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/UsersContainer.tsx":"19","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/users-selectors.ts":"20","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/Users.tsx":"21","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/Paginator.tsx":"22","/Users/ivan/Desktop/React tutorial/my-app/src/api/api.ts":"23","/Users/ivan/Desktop/React tutorial/my-app/src/components/Login/Login.tsx":"24","/Users/ivan/Desktop/React tutorial/my-app/src/utils/validators/validators.ts":"25","/Users/ivan/Desktop/React tutorial/my-app/src/api/users-api.ts":"26","/Users/ivan/Desktop/React tutorial/my-app/src/api/auth-api.ts":"27","/Users/ivan/Desktop/React tutorial/my-app/src/api/security-api.ts":"28","/Users/ivan/Desktop/React tutorial/my-app/src/api/profile-api.ts":"29","/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/DialogsContainer.tsx":"30","/Users/ivan/Desktop/React tutorial/my-app/src/utils/object-helpers.ts":"31","/Users/ivan/Desktop/React tutorial/my-app/src/App.tsx":"32","/Users/ivan/Desktop/React tutorial/my-app/src/HOC/withSuspense.tsx":"33","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/ProfileContainer.tsx":"34","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profile.tsx":"35","/Users/ivan/Desktop/React tutorial/my-app/src/HOC/withAuthRedirect.tsx":"36","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/MyPosts/MyPostContainer.tsx":"37","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profileinfo/ProfileInfo.tsx":"38","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profileinfo/ProfileBlockForm.tsx":"39","/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/Dialogs.jsx":"40","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/UsersSearchForm.tsx":"41","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/profile-selector.ts":"42","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/auth-selector.ts":"43","/Users/ivan/Desktop/React tutorial/my-app/src/pages/ChatPage.tsx":"44","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/chat-reducer.tsx":"45","/Users/ivan/Desktop/React tutorial/my-app/src/api/chat-api.ts":"46"},{"size":487,"mtime":1615391001367,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1610807039144,"results":"49","hashOfConfig":"50"},{"size":153,"mtime":1610895002996,"results":"51","hashOfConfig":"50"},{"size":1915,"mtime":1618297376879,"results":"52","hashOfConfig":"48"},{"size":880,"mtime":1613215963270,"results":"53","hashOfConfig":"48"},{"size":2259,"mtime":1618560467515,"results":"54","hashOfConfig":"48"},{"size":536,"mtime":1616264177814,"results":"55","hashOfConfig":"48"},{"size":207,"mtime":1612187662010,"results":"56","hashOfConfig":"48"},{"size":367,"mtime":1616432139694,"results":"57","hashOfConfig":"48"},{"size":178,"mtime":1613499269672,"results":"58","hashOfConfig":"48"},{"size":811,"mtime":1617010852360,"results":"59","hashOfConfig":"48"},{"size":1115,"mtime":1618055398412,"results":"60","hashOfConfig":"48"},{"size":927,"mtime":1618060640094,"results":"61","hashOfConfig":"48"},{"size":3020,"mtime":1618299258876,"results":"62","hashOfConfig":"48"},{"size":1587,"mtime":1617448402665,"results":"63","hashOfConfig":"48"},{"size":3903,"mtime":1618056952742,"results":"64","hashOfConfig":"48"},{"size":4463,"mtime":1618066090625,"results":"65","hashOfConfig":"48"},{"size":1272,"mtime":1618558094960,"results":"66","hashOfConfig":"48"},{"size":514,"mtime":1617645135913,"results":"67","hashOfConfig":"48"},{"size":889,"mtime":1618295854503,"results":"68","hashOfConfig":"48"},{"size":4007,"mtime":1618264428186,"results":"69","hashOfConfig":"48"},{"size":1703,"mtime":1616853756987,"results":"70","hashOfConfig":"48"},{"size":1092,"mtime":1618299387565,"results":"71","hashOfConfig":"48"},{"size":2997,"mtime":1617647345326,"results":"72","hashOfConfig":"48"},{"size":387,"mtime":1617006586161,"results":"73","hashOfConfig":"48"},{"size":873,"mtime":1618217947326,"results":"74","hashOfConfig":"48"},{"size":781,"mtime":1617267747716,"results":"75","hashOfConfig":"48"},{"size":307,"mtime":1617286434635,"results":"76","hashOfConfig":"48"},{"size":1088,"mtime":1617285262539,"results":"77","hashOfConfig":"48"},{"size":693,"mtime":1617354968797,"results":"78","hashOfConfig":"48"},{"size":286,"mtime":1618056990155,"results":"79","hashOfConfig":"48"},{"size":5056,"mtime":1618419186414,"results":"80","hashOfConfig":"48"},{"size":302,"mtime":1617355456798,"results":"81","hashOfConfig":"48"},{"size":2439,"mtime":1618055309407,"results":"82","hashOfConfig":"48"},{"size":792,"mtime":1618055460880,"results":"83","hashOfConfig":"48"},{"size":871,"mtime":1617358593473,"results":"84","hashOfConfig":"48"},{"size":511,"mtime":1618036287354,"results":"85","hashOfConfig":"48"},{"size":4043,"mtime":1618043179376,"results":"86","hashOfConfig":"48"},{"size":2035,"mtime":1617375412910,"results":"87","hashOfConfig":"48"},{"size":1948,"mtime":1617382244486,"results":"88","hashOfConfig":"48"},{"size":3547,"mtime":1618221441773,"results":"89","hashOfConfig":"48"},{"size":232,"mtime":1618039976432,"results":"90","hashOfConfig":"48"},{"size":227,"mtime":1618296122857,"results":"91","hashOfConfig":"48"},{"size":2829,"mtime":1618559759579,"results":"92","hashOfConfig":"48"},{"size":2767,"mtime":1618560714078,"results":"93","hashOfConfig":"48"},{"size":2588,"mtime":1618558201808,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},"ieii1h",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"y9wf97",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"/Users/ivan/Desktop/React tutorial/my-app/src/index.js",["213"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MainApp from \"./App\"\n\n\n  \n  ReactDOM.render(\n    <React.StrictMode>\n      <MainApp />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["214","215"],"/Users/ivan/Desktop/React tutorial/my-app/src/reportWebVitals.js",[],["216","217"],"/Users/ivan/Desktop/React tutorial/my-app/src/Menu.js",[],["218","219"],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Header/Header.jsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Navbar/Navbar.jsx",["220","221","222"],"import React from \"react\";\nimport classes from \"./Navbar.module.css\"\nimport { NavLink } from \"react-router-dom\"\n\n\nconst Navbar = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\n      </div>\n      <div className={`${classes.item} ${classes.active}`}>\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\n      </div>\n      <div className={`${classes.item} ${classes.active}`}>\n        <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n      </div>\n      <div className={classes.item}>\n        <a>News</a>\n      </div>\n      <div className={classes.item}>\n        <a>Music</a>\n      </div>\n      <div className={classes.item}>\n        <a>Settings</a>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar",["223","224"],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/MyPosts/MyPosts.jsx",["225"],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/MyPosts/Post/Post.jsx",["226","227"],"import React from \"react\";\nimport classes from \"./Post.module.css\";\nimport userPhoto from \"../../../../assets/images/user.png\"\n\nconst Post = (props) => {\n    return (\n            <div className={classes.item}>\n                <img src=\"http://static.mk.ru/upload/entities/2019/05/08/00/articles/detailPicture/c7/b5/08/6e/5dda626cb409b1fa6942c29040609e17.jpg\" />\n              { props.message }\n              <div>\n                 <span>like</span> {props.likesCount}\n              </div>\n            </div>\n    )\n}\n\nexport default Post","/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/Message/Message.jsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/Dialogitem/Dialogitem.jsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/common/Preloader/Preloader.js",["228"],"import React from \"react\"\nimport preloader from \"../../../assets/images/preloader.svg\"\n\nlet Preloader = (props) => {\n    return <img src={preloader}/>\n}\n\nexport default Preloader","/Users/ivan/Desktop/React tutorial/my-app/src/components/common/FormsControls/FormsControls.js",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profileinfo/ProfileStatusWithHooks.jsx",["229"],"import React, {useState, useEffect} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./ProfileInfo.module.css\"\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    const dispatch = useDispatch()\n     \n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n   <div className={classes.formStatus}>\n       { !editMode && \n        <div>\n           <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\n        </div>\n    }\n        {editMode &&\n           <div>\n             <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\n           </div>\n    }\n   </div>\n\n    )\n    }\nexport default ProfileStatusWithHooks","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/app-reducer.ts",[],["230","231"],"/Users/ivan/Desktop/React tutorial/my-app/src/Redux/auth-reducer.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/Redux/dialog-reducer.ts",["232"],"import { InferActionsTypes } from './redux-store';\n\n\ntype DialogType = {\n  id: number\n  name: string\n}\ntype MessageType = {\n  id: number\n  mes: string\n}\n\nlet initialState = {\n    messagesData: [\n        { id: 1, mes: \"hi\" },\n        { id: 2, mes: \"How are you?\" },\n        { id: 3, mes: \"Yo\" },\n      ] as Array<MessageType>,\n      dialogsData: [\n        { id: 1, name: \"Ivan\" },\n        { id: 2, name: \"Sasha\" },\n        { id: 3, name: \"Lena\" },\n        { id: 4, name: \"Vika\" },\n        { id: 5, name: \"Nikita\" },\n        { id: 6, name: \"Ira\" }\n      ] as Array<DialogType>,\n      newMessageText: \"\"\n\n}\n\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\n\nconst dialogReducer = (state=initialState, action: ActionsType): InitialStateType => {\n\n     switch (action.type) {           \n        case \"SN/DIALOGS/ADD-MESSAGE\": \n        let newMess = action.newMessageText\n        return {\n          ...state,\n          messagesData: [ ...state.messagesData, {id: 4, mes: newMess}],\n\n        };\n        case \"SN/DIALOGS/DELETE_MESSAGE\": {\n          return {\n            ...state, messagesData: state.messagesData.filter(m => m.id != action.userId)\n          }\n        }\n        \n        default: return state;\n     }\n    \n    }\n      export const actions = {\n        addMessageActionCreator: (newMessageText: string) => ({type: \"SN/DIALOGS/ADD-MESSAGE\", newMessageText} as const),\n        deleteMessage: (userId: number | null) => ({type: \"SN/DIALOGS/DELETE_MESSAGE\", userId} as const)\n      }\n\n      \n      \n\nexport default dialogReducer","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/profile-reducer.ts",["233"],"import { FormAction } from 'redux-form/lib/actions';\nimport { InferActionsTypes, BaseThunkType } from './redux-store';\nimport { PhotosType, ProfileType } from './../types/types';\nimport { stopSubmit } from \"redux-form\";\nimport {profileAPI} from \"../api/profile-api\"\n\ntype PostType = {\n    id: number\n    message: string \n    likesCount: number\n}\n\nlet initialState = {\n    posts: [\n        {id: 0, message: \"Hi, how are you?\", likesCount: 40},\n        {id: 1, message: \"Its my first post\", likesCount: 35},\n      ] as Array<PostType>, \n      profile: null as ProfileType | null,\n      status: \"\",\n      newPostText: \"\" \n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType> | FormAction\n\nconst profileReducer = (state=initialState, action: ActionsType): InitialStateType  => {\n    switch (action.type) {\n        case \"SN/ADD-POST\": {\n\n            let newPost = action.newPostText;\n            return {\n                ...state,\n                posts: [...state.posts, {id: 5, message: newPost, likesCount: 0}],\n            }\n        }\n\n        case \"SN/SET_USER_PROFILE\": {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case \"SN/SET_STATUS\": {\n            return {\n               ...state, status: action.status\n            }\n        }\n        case \"SN/DELETE_POST\": {\n            return {\n               ...state, posts: state.posts.filter(p => p.id != action.postId)\n            }\n        }\n        case \"SN/SAVE_PHOTO_SUCCESS\": {\n            return {\n               ...state, profile: {...state.profile, photos: action.photos} as ProfileType\n            }\n        }\n            default:\n                return state;\n        \n    }\n   \n}\n\nexport const actions = {\n    addPostActionCreator: (newPostText: string) => ({type: \"SN/ADD-POST\", newPostText} as const),\n    setUserProfile: (profile: ProfileType ) => ({type: \"SN/SET_USER_PROFILE\", profile} as const),\n    setStatus: (status: string) => ({type: \"SN/SET_STATUS\", status} as const),\n    deletePost: (postId: number) => ({type: \"SN/DELETE_POST\", postId} as const),\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SN/SAVE_PHOTO_SUCCESS\", photos} as const)\n\n}\n\n  export const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\n   let data = await profileAPI.getProfile(userId);\n        dispatch(actions.setUserProfile(data));\n  }\n  export const getStatus = (userId: number): ThunkType => async (dispatch) => {\n   let data = await profileAPI.getStatus(userId);\n        dispatch(actions.setStatus(data));\n  }\n\n  export const updateStatus = (status: string): ThunkType => async (dispatch) => {\n  try {\n    let data = await profileAPI.updateStatus(status);\n        if (data.resultCode === 0) {\n        dispatch(actions.setStatus(status));\n        }\n    } catch (error) {\n        \n    }\n  }\n\n  export const savePhoto = (file: File): ThunkType => async (dispatch) => {\n    let data = await profileAPI.savePhoto(file);\n          if (data.resultCode === 0) {\n          dispatch(actions.savePhotoSuccess(data.data.photos));\n          }\n    }\n\n    export const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\n        const userId = getState().auth.userId;\n        const data = await profileAPI.saveProfile(profile);\n              if (data.resultCode === 0) {\n                  if (userId != null) {\n                      // @ts-ignore\n              dispatch(getUserProfile(userId));\n                  } else {\n                      throw new Error(\"userId cant be null\")\n                  }\n              } else {\n                  // @ts-ignore\n                  dispatch(stopSubmit(\"edit-profile\", {_error: data.message[0]}));\n                  return Promise.reject(data.message[0])\n              }\n        }\n\nexport default profileReducer;","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/users-reducer.ts",["234","235"],"import { APIResponseType } from './../api/api';\nimport { UserType } from './../types/types';\nimport {usersAPI} from \"../api/users-api\"\nimport {updateObjectInArray} from \"../utils/object-helpers\"\nimport { InferActionsTypes, BaseThunkType } from './redux-store';\nimport { Dispatch } from 'react';\n\nlet initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 100, \n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as Array<number>, \n    filter: {\n        term: \"\",\n        friend: null as null | boolean\n    }\n};\n\nexport type InitialStateType = typeof initialState \n\ntype DispatchType = Dispatch<ActionsTypes>\ntype ThunkType = BaseThunkType<ActionsTypes>\ntype ActionsTypes = InferActionsTypes<typeof actions>\nexport type FilterType = typeof initialState.filter\n\nconst usersReducer = (state=initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case \"FOLLOW\":\n           return {\n               ...state, \n               users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n        case \"UNFOLLOW\": \n        return {\n            ...state, \n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n         }\n         case \"SET_USERS\": {\n             return { ...state, users: action.users}\n         }\n        case \"SET_CURRENT_PAGE\": {\n            return { ...state, currentPage: action.currentPage}\n        }\n        case \"SET_TOTAL_USERS_COUNT\": {\n            return { ...state, totalUsersCount: action.count}\n        }\n        case \"TOGGLE_IS_FETCHING\": {\n            return{...state, isFetching: action.isFetching}\n        }\n        case \"TOGGLE_IS_FOLLOWING_PROGRESS\": {\n            return{\n                   ...state, \n                   followingInProgress: action.isFetching \n                   ? [...state.followingInProgress, action.userId]\n                   : state.followingInProgress.filter(id => id != action.userId)\n                }\n        }\n        case \"SET_FILTER\": {\n            return {...state, filter: action.payload}\n        }\n            default:\n                return state;\n    }\n   \n}\n\n\nexport const actions = {\n\nfollowSuccess: (userId: number) => ({type: \"FOLLOW\", userId} as const),\n\nunfollowSuccess: (userId: number) => ({type: \"UNFOLLOW\", userId} as const),\n\nsetUsers: (users: Array<UserType>) => ({type: \"SET_USERS\", users} as const),\n\nsetCurrentPage: (currentPage: number) => ({type: \"SET_CURRENT_PAGE\", currentPage} as const),\n\nsetUsersTotalCount: (totalUsersCount: number) => ({type: \"SET_TOTAL_USERS_COUNT\", count: totalUsersCount} as const),\n\ntoggleIsFetching: (isFetching: boolean) => ({ type: \"TOGGLE_IS_FETCHING\", isFetching} as const),\n\ntoggleFollowingProgress: (isFetching: boolean, userId: number) => ({type: \"TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId} as const), \n\nsetFilter: (filter: FilterType) => ({type: \"SET_FILTER\", payload: filter} as const)\n\n}\n\nexport const requestUsers = (page:number, pageSize:number, filter: FilterType): ThunkType => {\n\n     return async (dispatch, getState) => {\n\n        dispatch (actions.toggleIsFetching(true))\n        dispatch (actions.setCurrentPage(page))\n        dispatch(actions.setFilter(filter))\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\n        dispatch(actions.toggleIsFetching(false))\n        dispatch(actions.setUsers(data.items))\n        dispatch(actions.setUsersTotalCount(data.totalCount))\n    }\n}\n\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, \n                                  userId: number,\n                                  apiMethod: (userId: number) => Promise<APIResponseType>,\n                                  actionCreator: (userId: number) => ActionsTypes ) => {\n    dispatch(actions.toggleFollowingProgress(true, userId));\n      let data = await apiMethod(userId)\nif (data.resultCode === 0) {\ndispatch(actionCreator(userId));\n}\ndispatch(actions.toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId: number): ThunkType => {\n\n    return async (dispatch) => {\n      await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess)\n  }\n}\n\nexport const unfollow = (userId: number): ThunkType => {\n    return async (dispatch) => {\n      await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\n  }\n}\n\nexport default usersReducer;","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/redux-store.ts",["236"],"import { createStore, combineReducers, applyMiddleware, compose, Action } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport  dialogReducer from \"./dialog-reducer\"\nimport usersReducer from \"./users-reducer\"\nimport authReducer from \"./auth-reducer\"\nimport thunk, {ThunkAction} from \"redux-thunk\";\nimport { ActionTypes, reducer as formReducer } from \"redux-form\"\nimport appReducer from \"./app-reducer\"\nimport chatReducer from './chat-reducer'\n\n\n\nlet rootReducer = combineReducers({\n    profilesPage: profileReducer,\n    dialogPage: dialogReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n    chat: chatReducer\n\n});\n\ntype RootReducerType = typeof rootReducer \nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\n\n\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n// @ts-ignore \nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunk)\n  ))\n// @ts-ignore\nwindow._store_ = store\nexport default store","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/UsersContainer.tsx",["237"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {getIsFetching} from \"../../Redux/users-selectors\"\nimport { Users } from \"./Users\";\n\n\ntype UsersPagePropsType = {\n    pageTitle: string\n}\n\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\n\n     const isFetching = useSelector(getIsFetching)\n\n     return <>\n     <h2>{props.pageTitle}</h2>\n     {isFetching ? <Preloader /> : null}\n     <Users />\n            </>\n}\n\n","/Users/ivan/Desktop/React tutorial/my-app/src/Redux/users-selectors.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/Users.tsx",["238","239","240"],"import React, {useEffect} from \"react\"\nimport styles from \"./users.module.css\"\nimport userPhoto from \"../../assets/images/user.png\"\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Paginator from \"./Paginator\";\nimport {UsersSearchForm} from \"./UsersSearchForm\"\nimport { FilterType, requestUsers  } from \"../../Redux/users-reducer\";\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getTotalUsersCount, getUsers, getUsersFilter } from \"../../Redux/users-selectors\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport * as queryString from \"querystring\"\n\n\nexport const Users: React.FC = () => {\n\n    const users = useSelector(getUsers)\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const currentPage = useSelector(getCurrentPage)\n    const pageSize = useSelector(getPageSize)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        const parsed = queryString.parse(history.location.search.substr(1)) as {term: string; page: string; friend: string}\n         \n        let actualPage = currentPage\n        let actualFilter = filter\n\n        if (!!parsed.page) actualPage = Number(parsed.page)\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\n\n        switch(parsed.friend) {\n            case \"null\":\n                actualFilter = {...actualFilter, friend: null}\n                break;\n            case \"true\":\n                actualFilter = {...actualFilter, friend: true}\n                break;\n            case \"false\":\n                actualFilter = {...actualFilter, friend: false}\n                break;\n        }\n\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n    }, [])\n\n    useEffect(() => {\n        history.push({\n            pathname: \"/developers\",\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\n        })\n    }, [filter, currentPage])\n\n\n    const onPageChanged = (pageNumber: number) => {\n      dispatch(requestUsers(pageNumber, pageSize, filter));\n    } \n\n    const onFilterChange = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n\n    const follow = (userId: number) => {\n       dispatch(follow(userId))\n    } \n\n    const unfollow = (userId: number) => {\n       dispatch(unfollow(userId))\n    }\n    \n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n   let pages = [];\n   for (let i=1; i <= pagesCount; i++) {\n       pages.push(i);\n   }\n\n    return(<div className={styles.usersItems}> \n    \n        <UsersSearchForm onFilterChanged={onFilterChange}/>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} /> \n       {\n         users.map( u => <div key={u.id}> \n               <span>\n                  <div>\n                    <NavLink to={\"/profile/\" + u.id }>\n                     <img src={ u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto} />\n                    </NavLink>\n                  </div>\n                  <div>\n                      { u.followed ? \n                      <button disabled={followingInProgress.some(id => id === u.id)} onClick={ () => { unfollow(u.id);}}>\n                          Unfollow</button> : \n                      <button disabled={followingInProgress.some(id => id === u.id)} onClick={ () => { follow(u.id);}}>\n                          Follow</button>}\n                  </div>\n               </span>\n               <span>\n                   <span>\n                       <div>{u.name}</div>\n                       <div>{u.status}</div>\n                   </span>\n                   <span>\n                     {/*<div>{\"u.city\"}</div>*/}\n                     {/*<div>{\"u.country\"}</div>*/}\n                   </span>\n               </span>\n\n           </div>)\n       }\n     </div>)\n}\n","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/Paginator.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/api/api.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Login/Login.tsx",["241"],"import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport {required, maxLengthCreator} from \"../../utils/validators/validators\";\nimport {Input} from \"../common/FormsControls/FormsControls\"\nimport {login}  from \"../../Redux/auth-reducer\"\nimport { Redirect } from \"react-router-dom\"\nimport classes from \"./../common/FormsControls/FormsControls.module.css\"\nimport { AppStateType } from \"../../Redux/redux-store\";\nimport {useDispatch, useSelector} from \"react-redux\"\n\nconst maxLength25 = maxLengthCreator(25)\n\ntype LoginFormOwnProps = {\n    captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = (props) => {\n    return  (\n            <form className={classes.form} onSubmit={props.handleSubmit}>\n                <h1>Login</h1>\n                 <div>\n                     <Field className={classes.form_input} placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required, maxLength25]}/>\n                 </div>\n                 <div>\n                     <Field className={classes.form_input} placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required, maxLength25]} type={\"password\"}/>\n                 </div>\n                 <div className={classes.form_checkbox}>\n                     <Field component={Input} validate={[required, maxLength25]} name={\"rememberMe\"} type={\"checkbox\"}/>\n                      remember me\n                 </div>\n\n                 {props.captchaUrl && <img src={props.captchaUrl}/>}\n                 {props.captchaUrl && <Field placeholder={\"Symbols from image\"} name={\"captcha\"} validate={[required, maxLength25]} component={Input}/>}\n                { props.error && <div className={classes.formSummaryError}>\n                        {props.error}\n                 </div> }\n                 <div>\n                     <button className={classes.form_button}>Sign in</button>\n                 </div>\n             </form>\n    )\n}\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\n    form: \"login\"\n})(LoginForm)\n\n\n\ntype LoginFormValuesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string \n}\n\nexport const Login: React.FC = () => {\n\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\n    const dispatch = useDispatch()\n\n    const onSubmit = (formData: any) => {\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\n    }\n\n    if (isAuth) {\n        return <Redirect to={\"profile\"} />\n    }\n\n    return <div>\n             <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n             <div>\n                 <div>Guest account:</div>\n                 <div>Email: free@samuraijs.com</div>\n                 <div>Password: free</div>\n             </div>\n          </div>\n          \n}\n\n","/Users/ivan/Desktop/React tutorial/my-app/src/utils/validators/validators.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/api/users-api.ts",["242"],"import { AxiosPromise } from 'axios';\nimport { instance, GetItemsType, ResponseType } from './api';\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10, term: string = \"\", friend: null | boolean = null){\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`)) \n             .then (response => response.data);\n     },\n     getUsers2(pageNumber = 1, pageSize = 10) {\n        return instance.get(`follow?page=${pageNumber}&count=${pageSize}`)\n             .then (response => response.data);\n     },\n     follow (userId: number) {\n       return instance.post<ResponseType>(`follow/${userId}`).then(res => res.data)\n     },\n     unfollow (userId: number) {\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<ResponseType>\n    },\n\n }","/Users/ivan/Desktop/React tutorial/my-app/src/api/auth-api.ts",["243","244"],"import { instance, LoginMeResponseType, MeResponseType, ResultCodesEnum, ResponseType, ResultCodesForCaptcha } from './api';\n\n\ntype MeResponseDataType = {\n    id: number\n    email: string\n    login: string\n }\n \n type LoginMeResponseDataType = {\n    userId: number \n }\n \n\nexport const authAPI = {\n    me () {\n    return instance.get<ResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data)\n    },\n \n    login (email: string, password: string, rememberMe = false, captcha: null | string = null) {\n       return instance.post<ResponseType<LoginMeResponseDataType, ResultCodesEnum | ResultCodesForCaptcha>>(`auth/login`, {email, password, rememberMe, captcha}).then(res => res.data);\n       },\n       logout () {\n          return instance.delete(`auth/login`)\n          }\n  }","/Users/ivan/Desktop/React tutorial/my-app/src/api/security-api.ts",["245"],"import { getCaptchaUrl } from './../Redux/auth-reducer';\nimport { instance } from './api';\n\ntype getCaptchaUrlResponseType = {\n  url: string\n}\nexport const securityAPI = {\n    getCaptchaUrl() {\n    return instance.get<getCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\n    },\n  }\n ","/Users/ivan/Desktop/React tutorial/my-app/src/api/profile-api.ts",["246"],"import { PhotosType, ProfileType } from '../types/types';\nimport { instance, LoginMeResponseType, ResponseType } from './api';\n\ntype SavePhotoResponseDataType = {\n    photos: PhotosType\n}\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n       return instance.get<ProfileType>(`profile/` + userId).then(res => res.data);\n          \n    },\n    getStatus(userId: number) {\n       return instance.get<string>(`profile/status/` + userId).then(res => res.data);\n    },\n    updateStatus(status: string) {\n       return instance.put<ResponseType>(`profile/status`, {status: status}).then(res => res.data);\n    },\n    savePhoto(photoFile: any){\n       const formData = new FormData();\n       formData.append(\"image\", photoFile);\n       return instance.put<ResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\n          headers: {\n             \"Content-Type\": \"multipart/form-data\"\n          }\n       }).then(res => res.data);\n    },\n    saveProfile(profile: ProfileType){\n       return instance.put<ResponseType>(`profile`, profile).then(res => res.data);\n    }\n \n }","/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/DialogsContainer.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/utils/object-helpers.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/App.tsx",["247","248","249","250","251"],"import React, { Component } from 'react'\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, Switch, withRouter, Redirect} from \"react-router-dom\";\nimport {Login} from './components/Login/Login';\nimport { connect } from \"react-redux\";\nimport {compose} from \"redux\"\nimport {initializeApp} from \"./Redux/app-reducer\"\nimport Preloader from './components/common/Preloader/Preloader';\nimport store, { AppStateType } from \"./Redux/redux-store\";\nimport {Provider} from \"react-redux\"\nimport { withSuspense } from './HOC/withSuspense';\nimport { UsersPage } from './components/Users/UsersContainer'\nimport { NavLink } from \"react-router-dom\"\nimport { Avatar, Row, Col } from 'antd';\n\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport {AppHeader} from './components/Header/Header';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\nconst ChatPage = React.lazy(() => import(\"./pages/ChatPage\"))\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nconst SuspendedDialogs = withSuspense(DialogsContainer);\nconst SuspendedProfile = withSuspense(ProfileContainer);\nconst SuspendedChatPage = withSuspense(ChatPage)\n\n\nclass App extends Component<MapPropsType & DispatchPropsType> {\n  catchAllUnhandleErrors = (e: PromiseRejectionEvent) => {\n          alert(\"Some error occured\")\n          console.error(PromiseRejectionEvent)\n  }\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors)\n }\n componentWillUnmount() {\n  window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors)\n }\n render(){\n   if (!this.props.initialized){\n   return <Preloader />\n   } else \n\n  return (\n    <Layout>\n    <AppHeader />\n    <Content style={{ padding: '0 50px' }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n        <Breadcrumb.Item>List</Breadcrumb.Item>\n        <Breadcrumb.Item>App</Breadcrumb.Item>\n      </Breadcrumb>\n      <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n        <Sider className=\"site-layout-background\" width={200}>\n          <Menu\n            mode=\"inline\"\n            //defaultSelectedKeys={['7']}\n           // defaultOpenKeys={['sub1']}\n            style={{ height: '100%' }}\n          >\n\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"My Profile\">\n              <Menu.Item key=\"1\"><NavLink to=\"/profile\">Profile</NavLink></Menu.Item>\n              <Menu.Item key=\"2\"><NavLink to=\"/dialogs\">Messages</NavLink></Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Developers\">\n              <Menu.Item key=\"5\"><NavLink to=\"/developers\">Users</NavLink></Menu.Item>\n              <Menu.Item key=\"6\">option6</Menu.Item>\n              <Menu.Item key=\"7\">option7</Menu.Item>\n              <Menu.Item key=\"8\">option8</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\n              <Menu.Item key=\"9\"><NavLink to=\"/chat\">Chat</NavLink></Menu.Item>\n              <Menu.Item key=\"10\">option10</Menu.Item>\n              <Menu.Item key=\"11\">option11</Menu.Item>\n              <Menu.Item key=\"12\">option12</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\n <Switch>\n        \n        <Redirect exact from=\"/\" to=\"/Profile\"/> \n \n         <Route path=\"/dialogs\" \n               render={() => <SuspendedDialogs />}/>\n \n         <Route path=\"/profile/:userId?\" \n                render={() => <SuspendedProfile />}/>\n \n         <Route path=\"/developers\" render={ () => <UsersPage pageTitle={\"Пользователи\"} />}/>\n         \n         <Route path=\"/login\" render={ () => <Login />}/>\n\n         <Route path=\"/chat\" render={ () => <SuspendedChatPage />}/>\n          \n         <Route path=\"/mysocial-network\" render={ () => <Login />}/>\n \n         <Route path=\"*\" render={ () => <div>404 not found</div>}/>\n </Switch> \n        </Content>\n      </Layout>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Social Network ©2021 Created by Ivan Staroverov</Footer>\n  </Layout>\n  );\n }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, {initializeApp})) (App);\n\nconst MainApp: React.FC = () => {\n  return <React.StrictMode>\n      <BrowserRouter>\n         <Provider store={store}>\n            <AppContainer />\n         </Provider>\n      </BrowserRouter>\n    </React.StrictMode>\n}\n\nexport default MainApp;","/Users/ivan/Desktop/React tutorial/my-app/src/HOC/withSuspense.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/ProfileContainer.tsx",["252","253","254"],"import React from \"react\";\nimport Profile from \"./Profile\"\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../Redux/profile-reducer\"\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport {compose} from \"redux\"\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\nimport { AppStateType } from \"../../Redux/redux-store\";\nimport { ProfileType } from \"../../types/types\";\nimport ProfileContent from \"./Profile\";\n\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\n\ntype DispatchPropsType = {\n  getUserProfile: (userId: number) => void \n  getStatus: (userId: number) => void\n  updateStatus: (status: string) => void\n  savePhoto: (file: File) => void\n  saveProfile: (profile: ProfileType) => Promise<any>\n}\n\ntype PathParamsType = {\n  userId: string \n}\n\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>\n\nclass ProfileContainer extends React.Component<PropsType> {\n  constructor(props: PropsType) {\n    super (props)\n  }\n  refreshProfile(){\n    let userId: number | null = +this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n  \n    this.props.getUserProfile(userId as number)\n  \n    this.props.getStatus(userId as number);\n  }\n    componentDidMount() {\n      this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType){\n      if (this.props.match.params.userId != prevProps.match.params.userId){      \n        this.refreshProfile();\n    }\n  }\n\n  render() {\n   \n  return (\n    <div>\n      <ProfileContent {...this.props} \n               \n               isOwner={!this.props.match.params.userId}             \n               status={this.props.status}\n               updateStatus={this.props.updateStatus}\n               savePhoto={this.props.savePhoto}\n               saveProfile={this.props.saveProfile}/>\n    </div>\n    \n  )\n   }\n}\n\n\nlet mapStateToProps = (state: AppStateType) => ({ \n    profile: state.profilesPage.profile,\n    status: state.profilesPage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n    \n})\n\n\n export default compose<React.ComponentType>(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profile.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/HOC/withAuthRedirect.tsx",["255"],"import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport {connect, MapDispatchToProps} from \"react-redux\"\nimport { AppStateType } from \"../Redux/redux-store\"\n\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({ \n    isAuth: state.auth.isAuth\n  })\n\ntype MapPropsType = {\n  isAuth: boolean\n}\n\ntype DispatchPropsType = {\n  \n}\n\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>){\n    const RedirectComponent: React.FC<DispatchPropsType & MapPropsType> = (props) => {\n        if (!props.isAuth) return <Redirect to=\"/login\" />\n        \n        let {isAuth, ...restProps} = props\n        return <WrappedComponent {...restProps as WCP} />\n}\n  \n  let ConnectedAuthRedirectComponent = connect<MapPropsType, {}, WCP, AppStateType>(mapStateToPropsForRedirect) (RedirectComponent)\n\nreturn ConnectedAuthRedirectComponent;\n\n}","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/MyPosts/MyPostContainer.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profileinfo/ProfileInfo.tsx",["256","257"],"import React, {ChangeEvent, useState} from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport classes from \"./ProfileInfo.module.css\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileBlockFormReduxForm from \"./ProfileBlockForm\"\nimport { ProfileType } from \"../../../types/types\";\nimport {ContactsType} from \"../../../types/types\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getProfile, getStatus } from \"../../../Redux/profile-selector\";\n\ntype PropsType = {\n   // profile: ProfileType\n    status: string\n    updateStatus: (status: string) => void\n    isOwner: boolean \n    savePhoto: (file: File) => void \n    saveProfile: (profile: ProfileType) => Promise<any>\n}\n\nconst ProfileInfo: React.FC<PropsType> = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    const profile = useSelector(getProfile)\n    const status = useSelector(getStatus)\n\n    const dispatch = useDispatch()\n    \n\n\n   if (!profile) {\n        return <Preloader />\n    } \n\n    const onMainPhotosSelected = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length) {\n            props.savePhoto(e.target.files[0]);\n        }\n    }\n    const onSubmit = (formData: ProfileType) => {\n        props.saveProfile(formData).then(() => {\n            setEditMode(false);\n        })\n        \n    }\n    return (\n        <div>\n            <div className={classes.descriptionBlock}>\n               <img src={profile.photos.large || userPhoto} className={classes.mainPhoto}/>\n               { props.isOwner && <input type={\"file\"} onChange={onMainPhotosSelected}/>}\n                { editMode ? <ProfileBlockFormReduxForm /*goToEditMode={props.goToEditMode*/\n                                                        goToEditMode={() => {setEditMode(false)}}\n                                                        profile={profile}\n                                                        onSubmit={onSubmit}\n                                                        initialValues={profile} /> \n                           : <ProfileBlock profile={profile} \n                                           isOwner={props.isOwner} \n                                           goToEditMode={() => {setEditMode(true)}}/> }\n                \n                <ProfileStatusWithHooks status={status}\n                                        updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n\n    )\n}\ntype ProfileDataPropsType = {\n    profile: ProfileType \n    isOwner: boolean\n    goToEditMode: () => void\n }\nconst ProfileBlock: React.FC<ProfileDataPropsType> = (props) => {\n    return <div className={classes.formEdit}> \n                  { props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div> }\n                   <div>\n                     <b>Full name</b>: {props.profile.fullName}\n                  </div>\n                  <div>\n                     <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\n                  </div>\n                  { props.profile.lookingForAJob &&\n                  <div>\n                     <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\n                  </div>\n                   }\n                  <div>\n                     <b>About me</b>: {props.profile.aboutMe}\n                  </div>\n                  <div>\n                     <b>Contacts</b>: {Object.keys(props.profile.contacts).map((key) => {\n                        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key as keyof ContactsType]}/>\n                     })}\n                  </div>\n               </div>\n}\n\n\ntype ContactsPropsType = {\n    contactTitle: string\n    contactValue: string \n}\n\nconst Contact: React.FC<ContactsPropsType> = ({contactTitle, contactValue}) => {\n    return <div className={classes.contact}><b>{contactTitle}</b> : {contactValue}</div>\n}\nexport default ProfileInfo","/Users/ivan/Desktop/React tutorial/my-app/src/components/Profile/Profileinfo/ProfileBlockForm.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/components/Dialogs/Dialogs.jsx",["258","259"],"import React from \"react\";\nimport classes from \"./Dialogs.module.css\"\nimport Message from \"./Message/Message\"\nimport DialogItem from \"./Dialogitem/Dialogitem\"\nimport { Redirect } from \"react-router-dom\"\nimport { Field, reduxForm } from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\"\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\n \nconst maxLength50 = maxLengthCreator(50)\n\n\nconst Dialogs = (props) => {\n\n\n    let newMessageElements = React.createRef();\n\n    let dialogsElements = props.dialogsData\n    .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} /> );\n    \n    let messagesElements = props.messagesData\n    .map( message => <Message mes={message.mes} key={message.id}/> );\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageText);\n    }\n    \n //if (!props.isAuth) return <Redirect to={\"/login\"} />\n    \n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n               { dialogsElements }\n            </div>\n            <div className={classes.messages}>\n                <div>{ messagesElements }</div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\nreturn (\n       <form onSubmit={props.handleSubmit}> \n                <div className={classes.dialogsForm}>\n                <Field component={Textarea} \n                       validate={[required, maxLength50]}\n                       name=\"newMessageText\"\n                       placeholder=\"Enter your message\"\n                       />\n               </div>\n                <div className={classes.dialogButton}>\n                    <button>Send</button>\n                </div>\n       </form>\n)\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: \"dialogAddMessageForm\"\n})(AddMessageForm)\n\nexport default Dialogs;","/Users/ivan/Desktop/React tutorial/my-app/src/components/Users/UsersSearchForm.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/Redux/profile-selector.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/Redux/auth-selector.ts",[],"/Users/ivan/Desktop/React tutorial/my-app/src/pages/ChatPage.tsx",["260","261","262","263"],"/Users/ivan/Desktop/React tutorial/my-app/src/Redux/chat-reducer.tsx",[],"/Users/ivan/Desktop/React tutorial/my-app/src/api/chat-api.ts",[],{"ruleId":"264","severity":1,"message":"265","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":11},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"268","replacedBy":"272"},{"ruleId":"270","replacedBy":"273"},{"ruleId":"268","replacedBy":"274"},{"ruleId":"270","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":19,"column":9,"nodeType":"278","endLine":19,"endColumn":12},{"ruleId":"276","severity":1,"message":"277","line":22,"column":9,"nodeType":"278","endLine":22,"endColumn":12},{"ruleId":"276","severity":1,"message":"277","line":25,"column":9,"nodeType":"278","endLine":25,"endColumn":12},{"ruleId":"268","replacedBy":"279"},{"ruleId":"270","replacedBy":"280"},{"ruleId":"264","severity":1,"message":"281","line":62,"column":12,"nodeType":"266","messageId":"267","endLine":62,"endColumn":23},{"ruleId":"264","severity":1,"message":"282","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":8,"column":17,"nodeType":"278","endLine":8,"endColumn":152},{"ruleId":"283","severity":1,"message":"284","line":5,"column":12,"nodeType":"278","endLine":5,"endColumn":34},{"ruleId":"264","severity":1,"message":"285","line":10,"column":11,"nodeType":"266","messageId":"267","endLine":10,"endColumn":19},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"286","severity":1,"message":"287","line":47,"column":73,"nodeType":"288","messageId":"289","endLine":47,"endColumn":75},{"ruleId":"286","severity":1,"message":"287","line":50,"column":62,"nodeType":"288","messageId":"289","endLine":50,"endColumn":64},{"ruleId":"290","severity":1,"message":"291","line":23,"column":6,"nodeType":"266","messageId":"267","endLine":23,"endColumn":18},{"ruleId":"286","severity":1,"message":"287","line":57,"column":64,"nodeType":"288","messageId":"289","endLine":57,"endColumn":66},{"ruleId":"290","severity":1,"message":"292","line":7,"column":10,"nodeType":"266","messageId":"267","endLine":7,"endColumn":21},{"ruleId":"290","severity":1,"message":"293","line":12,"column":7,"nodeType":"266","messageId":"267","endLine":12,"endColumn":46},{"ruleId":"294","severity":1,"message":"295","line":47,"column":8,"nodeType":"296","endLine":47,"endColumn":10,"suggestions":"297"},{"ruleId":"294","severity":1,"message":"298","line":54,"column":8,"nodeType":"296","endLine":54,"endColumn":29,"suggestions":"299"},{"ruleId":"283","severity":1,"message":"284","line":89,"column":22,"nodeType":"278","endLine":89,"endColumn":117},{"ruleId":"283","severity":1,"message":"284","line":32,"column":39,"nodeType":"278","endLine":32,"endColumn":68},{"ruleId":"290","severity":1,"message":"300","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":22},{"ruleId":"290","severity":1,"message":"301","line":1,"column":20,"nodeType":"266","messageId":"267","endLine":1,"endColumn":39},{"ruleId":"290","severity":1,"message":"302","line":1,"column":41,"nodeType":"266","messageId":"267","endLine":1,"endColumn":55},{"ruleId":"290","severity":1,"message":"303","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":23},{"ruleId":"290","severity":1,"message":"301","line":2,"column":20,"nodeType":"266","messageId":"267","endLine":2,"endColumn":39},{"ruleId":"290","severity":1,"message":"304","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":14},{"ruleId":"290","severity":1,"message":"305","line":16,"column":10,"nodeType":"266","messageId":"267","endLine":16,"endColumn":16},{"ruleId":"290","severity":1,"message":"306","line":16,"column":18,"nodeType":"266","messageId":"267","endLine":16,"endColumn":21},{"ruleId":"290","severity":1,"message":"307","line":16,"column":23,"nodeType":"266","messageId":"267","endLine":16,"endColumn":26},{"ruleId":"290","severity":1,"message":"308","line":24,"column":9,"nodeType":"266","messageId":"267","endLine":24,"endColumn":15},{"ruleId":"290","severity":1,"message":"309","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":30,"column":3,"nodeType":"312","messageId":"313","endLine":32,"endColumn":4},{"ruleId":"286","severity":1,"message":"287","line":51,"column":42,"nodeType":"288","messageId":"289","endLine":51,"endColumn":44},{"ruleId":"290","severity":1,"message":"314","line":3,"column":18,"nodeType":"266","messageId":"267","endLine":3,"endColumn":36},{"ruleId":"290","severity":1,"message":"285","line":26,"column":11,"nodeType":"266","messageId":"267","endLine":26,"endColumn":19},{"ruleId":"283","severity":1,"message":"284","line":48,"column":16,"nodeType":"278","endLine":48,"endColumn":92},{"ruleId":"264","severity":1,"message":"315","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":18},{"ruleId":"264","severity":1,"message":"316","line":17,"column":9,"nodeType":"266","messageId":"267","endLine":17,"endColumn":27},{"ruleId":"294","severity":1,"message":"317","line":26,"column":8,"nodeType":"296","endLine":26,"endColumn":10,"suggestions":"318"},{"ruleId":"319","severity":1,"message":"320","line":37,"column":33,"nodeType":"321","messageId":"289","endLine":37,"endColumn":35},{"ruleId":"294","severity":1,"message":"322","line":56,"column":8,"nodeType":"296","endLine":56,"endColumn":18,"suggestions":"323"},{"ruleId":"283","severity":1,"message":"284","line":68,"column":9,"nodeType":"278","endLine":68,"endColumn":59},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["324"],"no-negated-in-lhs",["325"],["324"],["325"],["324"],["325"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["324"],["325"],"'newPostText' is assigned a value but never used.","'userPhoto' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'DispatchType' is defined but never used.","'ActionTypes' is defined but never used.","'UsersPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["326"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["327"],"'AxiosPromise' is defined but never used.","'LoginMeResponseType' is defined but never used.","'MeResponseType' is defined but never used.","'getCaptchaUrl' is defined but never used.","'Navbar' is defined but never used.","'Avatar' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Header' is assigned a value but never used.","'Profile' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MapDispatchToProps' is defined but never used.","'Redirect' is defined but never used.","'newMessageElements' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["328"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","React Hook useEffect has a missing dependency: 'isAutoScroll'. Either include it or remove the dependency array.",["329"],"no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"338","text":"339"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"340","text":"341"},"Update the dependencies array to be: [dispatch]",{"range":"342","text":"343"},"Update the dependencies array to be: [isAutoScroll, messages]",{"range":"344","text":"345"},[1842,1844],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2034,2055],"[filter, currentPage, history]",[688,690],"[dispatch]",[1630,1640],"[isAutoScroll, messages]"]