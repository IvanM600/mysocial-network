{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","postsElements","this","posts","map","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","Posts","Component","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPostsContainer","connect","state","profilesPage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","ProfileContent","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Profile","isAuth","React","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.90f6f2f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__BVc_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"Posts\":\"MyPosts_Posts__3CeaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\n\nconst Post = (props) => {\n    return (\n            <div className={classes.item}>\n                <img src=\"https://static.mk.ru/upload/entities/2019/05/08/00/articles/detailPicture/c7/b5/08/6e/5dda626cb409b1fa6942c29040609e17.jpg\" alt=\"\"/>\n              { props.message }\n              <div>\n                 <span>like</span> {props.likesCount}\n              </div>\n            </div>\n    )\n}\n\nexport default Post","import React, {Component} from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\"\nimport {Textarea} from \"../../common/FormsControls/FormsControls\"\n\n\nconst maxLength10 = maxLengthCreator(10)\n\nclass MyPosts extends Component {\n\n\n\nrender() {\n  let addNewPost = (values) => {\n    this.props.addPost(values.newPostText)\n  }\n  \n  let newPostElements = React.createRef();\n  \n  let postsElements = this.props.posts\n  .map( posts => <Post message={posts.message} likesCount={posts.likesCount} />)\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n\n      <AddPostReduxForm onSubmit={addNewPost} />\n\n      <div className={classes.Posts}>\n        { postsElements }\n      </div>\n    </div>\n\n  )\n}\n}\n\nconst MyForm = (props) => {\n  return ( \n  <form onSubmit={props.handleSubmit}>\n    <div>\n         <Field placeholder=\"Enter your message\" name=\"newPostText\" component={Textarea} validate={[required, maxLength10]}/>\n    </div>\n    <div>\n         <button>Add post</button>\n    </div>\n  </form>\n  )\n}\n\nconst AddPostReduxForm = reduxForm({\n  form: \"addPostForm\"\n})(MyForm)\n\nexport default MyPosts","import React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport { addPostActionCreator} from \"../../../Redux/profile-reducer\"\nimport { connect } from \"react-redux\"\n\n\nlet mapStateToProps = (state) => {\n  return {\n     posts: state.profilesPage.posts,\n     newPostText: state.profilesPage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer","import React, {useState, useEffect} from \"react\";\nimport classes from \"./ProfileInfo.module.css\"\n\nconst ProfileStatusWithHooks = (props) => {\n    \n    let {editMode, setEditMode} = useState(false);\n    let {status, setStatus} = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status] )\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n   <div>\n       { !editMode && \n        <div>\n           <span onDoubleClick={ activateEditMode}>{props.status || \"-----\"}</span>\n        </div>\n    }\n        {editMode &&\n           <div>\n             <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\n           </div>\n    }\n   </div>\n\n    )\n    }\nexport default ProfileStatusWithHooks","import React from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport classes from \"./ProfileInfo.module.css\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n   if (!props.profile) {\n        return <Preloader />\n    } \n    return (\n        <div>\n            {/*<div>\n                <img src=\"https://www.w3schools.com/w3css/img_lights.jpg\"></img>\n            </div> */}\n            <div className={classes.descriptionBlock}>\n               <img src={props.profile.photos.large}/>\n                <ProfileStatusWithHooks status={props.status}\n                               updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n\n    )\n}\nexport default ProfileInfo","import React from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\n\n\nconst ProfileContent = (props) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} \n                   status={props.status}\n                   updateStatus={props.updateStatus}/>\n      <MyPostsContainer  /> \n    </div>\n    \n  )\n}\n\nexport default ProfileContent","import React from \"react\";\nimport Profile from \"./Profile\"\nimport {getUserProfile, getStatus, updateStatus} from \"../../Redux/profile-reducer\"\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {compose} from \"redux\"\n\n\n\n\nclass ProfileContainer extends React.Component {\n    componentDidCatch() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId)\n\n    this.props.getStatus(userId);\n    }\n  render() {\n   \n  return (\n    <div>\n      <Profile {...this.props} \n               profile={this.props.profile} \n               isAuth={this.props.isAuth} \n               status={this.props.status}\n               updateStatus={this.props.updateStatus}/>\n    </div>\n    \n  )\n   }\n}\n\n\nlet mapStateToProps = (state) => ({ \n    profile: state.profilesPage.profile,\n    status: state.profilesPage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n    \n})\n\n\n export default compose(\n  connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n  withRouter,\n  //withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}