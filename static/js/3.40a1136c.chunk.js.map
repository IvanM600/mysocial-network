{"version":3,"sources":["HOC/withAuthRedirect.js","components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileBlockForm.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","postsElements","posts","map","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","Posts","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPostsContainer","profilesPage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileBlockFormReduxForm","error","formSummaryError","Input","type","Object","keys","profile","contacts","key","contact","ProfileBlock","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","descriptionBlock","photos","large","userPhoto","mainPhoto","target","files","length","savePhoto","formData","saveProfile","then","initialValues","ProfileContent","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Profile","compose","withRouter"],"mappings":"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","file":"static/js/3.40a1136c.chunk.js","sourcesContent":["import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport {connect} from \"react-redux\"\n\nlet mapStateToPropsForRedirect = (state) => ({ \n    isAuth: state.auth.isAuth\n  })\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n    render() {\n        if (!this.props.isAuth) return <Redirect to=\"/login\" />\n        return <Component {...this.props} />\n    }\n}\n  \n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\n\nreturn ConnectedAuthRedirectComponent;\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__BVc_8\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1kLok\",\"contact\":\"ProfileInfo_contact__1zLuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"Posts\":\"MyPosts_Posts__3CeaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\n\nconst Post = (props) => {\n    return (\n            <div className={classes.item}>\n                <img src=\"https://static.mk.ru/upload/entities/2019/05/08/00/articles/detailPicture/c7/b5/08/6e/5dda626cb409b1fa6942c29040609e17.jpg\" alt=\"\"/>\n              { props.message }\n              <div>\n                 <span>like</span> {props.likesCount}\n              </div>\n            </div>\n    )\n}\n\nexport default Post","import React, {Component} from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\"\nimport {Textarea} from \"../../common/FormsControls/FormsControls\"\n\n\nconst maxLength10 = maxLengthCreator(10)\n\nclass MyPosts extends Component {\n\n\n\nrender() {\n  let addNewPost = (values) => {\n    this.props.addPost(values.newPostText)\n  }\n  \n  let newPostElements = React.createRef();\n  \n  let postsElements = this.props.posts\n  .map( posts => <Post message={posts.message} likesCount={posts.likesCount} />)\n  return (\n    <div className={classes.postsBlock}>\n      <h3>My posts</h3>\n\n      <AddPostReduxForm onSubmit={addNewPost} />\n\n      <div className={classes.Posts}>\n        { postsElements }\n      </div>\n    </div>\n\n  )\n}\n}\n\nconst MyForm = (props) => {\n  return ( \n  <form onSubmit={props.handleSubmit}>\n    <div>\n         <Field placeholder=\"Enter your message\" name=\"newPostText\" component={Textarea} validate={[required, maxLength10]}/>\n    </div>\n    <div>\n         <button>Add post</button>\n    </div>\n  </form>\n  )\n}\n\nconst AddPostReduxForm = reduxForm({\n  form: \"addPostForm\"\n})(MyForm)\n\nexport default MyPosts","import React from \"react\";\nimport MyPosts from \"./MyPosts\";\nimport { addPostActionCreator} from \"../../../Redux/profile-reducer\"\nimport { connect } from \"react-redux\"\n\n\nlet mapStateToProps = (state) => {\n  return {\n     posts: state.profilesPage.posts,\n     newPostText: state.profilesPage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer","import React, {useState, useEffect} from \"react\";\nimport classes from \"./ProfileInfo.module.css\"\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n   <div>\n       { !editMode && \n        <div>\n           <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\n        </div>\n    }\n        {editMode &&\n           <div>\n             <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\n           </div>\n    }\n   </div>\n\n    )\n    }\nexport default ProfileStatusWithHooks","import React from \"react\"\nimport { Field } from \"redux-form\"\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\"\nimport {reduxForm} from \"redux-form\"\nimport classes from \"./ProfileInfo.module.css\"\n\n\nconst ProfileBlockForm = (props, error) => {\n    return <form onSubmit={props.handleSubmit}> \n                  {<div><button>Save</button></div> }\n                  { props.error && <div className={classes.formSummaryError}>\n                        {props.error}\n                 </div> }\n                   <div>\n                     <b>Full name</b>: <Field placeholder={\"Full name\"} name={\"fullName\"} component={Input}/>\n                  </div>\n                  <div>\n                     <b>Looking for a job</b>: <Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\n                  </div>\n                  \n                  <div>\n                     <b>My professional skills</b>: <Field placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"} component={Textarea}/>\n                  </div>\n                   \n                  <div>\n                     <b>About me</b>:  <Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\n                  </div>\n                   <div>\n                     <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\n                        return <div key={key} className={classes.contact}>\n                            <b>{key}: <Field placeholder={key} name={\"contacts.\" + key} component={Input}/></b>\n                        </div>\n                     })}\n                    </div>\n               </form>\n }\nconst ProfileBlockFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileBlockForm);\n\n export default ProfileBlockFormReduxForm","import React, {useState} from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport classes from \"./ProfileInfo.module.css\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileBlockFormReduxForm from \"./ProfileBlockForm\"\n\nconst ProfileInfo = (props) => {\n    let [editMode, setEditMode] = useState(false);\n   if (!props.profile) {\n        return <Preloader />\n    } \n\n    const onMainPhotosSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0]);\n        }\n    }\n    const onSubmit = (formData) => {\n        props.saveProfile(formData).then(() => {\n            setEditMode(false);\n        })\n        \n    }\n    return (\n        <div>\n            <div className={classes.descriptionBlock}>\n               <img src={props.profile.photos.large || userPhoto} className={classes.mainPhoto}/>\n               { props.isOwner && <input type={\"file\"} onChange={onMainPhotosSelected}/>}\n                { editMode ? <ProfileBlockFormReduxForm goToEditMode={props.goToEditMode}\n                                                        profile={props.profile}\n                                                        onSubmit={onSubmit}\n                                                        initialValues={props.profile} /> \n                           : <ProfileBlock profile={props.profile} \n                                           isOwner={props.isOwner} \n                                           goToEditMode={() => {setEditMode(true)}}/> }\n                \n                <ProfileStatusWithHooks status={props.status}\n                               updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n\n    )\n}\n\nconst ProfileBlock = (props) => {\n    return <div> \n                  { props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div> }\n                   <div>\n                     <b>Full name</b>: {props.profile.fullName}\n                  </div>\n                  <div>\n                     <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\n                  </div>\n                  { props.profile.lookingForAJob &&\n                  <div>\n                     <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\n                  </div>\n                   }\n                  <div>\n                     <b>About me</b>: {props.profile.aboutMe}\n                  </div>\n                  <div>\n                     <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\n                        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\n                     })}\n                  </div>\n               </div>\n}\n\n\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\nexport default ProfileInfo","import React from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\n\n\nconst ProfileContent = (props) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} \n                   status={props.status}\n                   updateStatus={props.updateStatus}\n                   isOwner={props.isOwner}\n                   savePhoto={props.savePhoto}\n                   saveProfile={props.saveProfile}/>\n      <MyPostsContainer  /> \n    </div>\n    \n  )\n}\n\nexport default ProfileContent","import React from \"react\";\nimport Profile from \"./Profile\"\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../Redux/profile-reducer\"\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {compose} from \"redux\"\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\n\n\n\nclass ProfileContainer extends React.Component {\n  \n  refreshProfile(){\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n  \n    this.props.getUserProfile(userId)\n  \n    this.props.getStatus(userId);\n  }\n    componentDidMount() {\n      this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState){\n      if (this.props.match.params.userId != prevProps.match.params.userId){      \n        this.refreshProfile();\n    }\n  }\n\n  render() {\n   \n  return (\n    <div>\n      <Profile {...this.props} \n               isOwner={!this.props.match.params.userId}\n               profile={this.props.profile} \n               isAuth={this.props.isAuth} \n               status={this.props.status}\n               updateStatus={this.props.updateStatus}\n               savePhoto={this.props.savePhoto}\n               saveProfile={this.props.saveProfile}/>\n    </div>\n    \n  )\n   }\n}\n\n\nlet mapStateToProps = (state) => ({ \n    profile: state.profilesPage.profile,\n    status: state.profilesPage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n    \n})\n\n\n export default compose(\n  connect (mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}